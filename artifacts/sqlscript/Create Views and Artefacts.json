{
	"name": "Create Views and Artefacts",
	"properties": {
		"folder": {
			"name": "PBI Dev"
		},
		"content": {
			"query": "/*\n**Claim**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Claim\nGO\nCREATE VIEW fhir.v_pbi_Claim\nAS\nSELECT \n    cm.[Claim_id],\n    cm.patient_id_reference,\n    cm.provider_org_id_reference,\n    cm.total_value,\n    CAST(cm.created AS DATE) [Claim Date]\n  FROM [fhir].[Claim_main_hash] cm\n\n/*\n**Claim Procedure**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_ClaimProcedure\nGO\nCREATE VIEW fhir.v_pbi_ClaimProcedure\nAS\nSELECT TOP (100)\n    cm.[Claim_id],\n    cm.patient_id_reference,\n    cm.provider_org_id_reference,\n    CAST(pc.performedPeriod_start AS DATE) [Procedure Date],\n    pc.Procedure_code,\n\tpr.Reason_id \n\tFROM [fhir].[Claim_main_hash] cm\n\tINNER JOIN [fhir].[Claim_procedure_hash] cp\n\t\tON cm.Claim_id = cp.Claim_id\n\tINNER JOIN [fhir].[Procedure_code_hash] pc\n\t\tON cp.procedure_reference = pc.Procedure_id\n\tINNER JOIN  [fhir].[Procedure_reasonReference_hash] prh\n\t\tON cp.[procedure_reference] = prh.[Procedure_id]\n\tINNER JOIN [fhir].[Procedure_Reason] pr\n\t\tON prh.Procedure_reasonReference = pr.Procedure_Reason \n\n\n/*\n**Claim Insurance**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_ClaimInsurance\nGO\nCREATE VIEW fhir.v_pbi_ClaimInsurance\nAS\nSELECT \n    cm.[Claim_id],\n    cm.patient_id_reference,\n    cm.provider_org_id_reference,\n    cm.total_value,\n    YEAR([billablePeriod_start_date]) [Claim Year],\n    [billablePeriod_start_date] AS [Claim Date],\n    ci.insurance_coverage_display,\n    ci.HasInsurance_coverage AS HasInsurance\n  FROM [fhir].[Claim_main_hash] cm\n  INNER JOIN [fhir].[Claim_insurance_hash] ci\n    ON cm.Claim_id = ci.Claim_id\n\n/*\n**Claim Diagnosis**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_ClaimDiagnosis\nGO\nCREATE VIEW fhir.v_pbi_ClaimDiagnosis\nAS\nSELECT \n    cm.[Claim_id],\n    cm.patient_id_reference,\n    cm.provider_org_id_reference,\n    CAST(dc.effectiveDateTime AS DATE) [Diagnosis Date],\n    dc.Diagnostic_code\nFROM [fhir].[Claim_main_hash] cm\nINNER JOIN [fhir].[Claim_diagnosis_hash] cd\n    ON cm.Claim_id = cd.Claim_id\nINNER JOIN [fhir].[DiagnosticReport_result_hash] dr\n    ON cd.diagnosis_reference = dr.Diagnostic_reference\nINNER JOIN [fhir].[DiagnosticReport_code_hash] dc\n    ON dr.DiagnosticReport_id = dc.DiagnosticReport_id\n\n/*\n**DimOrganization**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Organization\nGO\nCREATE VIEW fhir.v_pbi_Organization\nAS\nSELECT \n    Organization_id,\n    Organization_name,\n    city,\n    country,\n    state,\n    postalcode\nFROM fhir.Organization_main_dedup_rep\n\n/*\n**DimDiagnosis**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Diagnosis\nGO\nCREATE VIEW fhir.v_pbi_Diagnosis\nAS\nselect DISTINCT\n    diagnostic_code,\n    Diagnostic_display\nfrom [fhir].[diagnosticreport_code_hash]\n\n/*\n**DimProcedure**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Procedure\nGO\nCREATE VIEW fhir.v_pbi_Procedure\nAS\nSELECT \n    [Procedure_code], \n    max([Procedure_display]) [Procedure_code_display]\nFROM (\nSELECT [Procedure_code]\n      ,[Procedure_display]\n  FROM [fhir].[ProcedureCode_RepTable] \n) x\nGROUP BY [Procedure_code] \n\n/*\n**DimProcedureReason**\n*/\n\nDROP TABLE fhir.Procedure_Reason\nGO\nCREATE TABLE fhir.Procedure_Reason\nWITH(DISTRIBUTION=REPLICATE)\nAS\nSELECT \n    ROW_NUMBER() OVER(ORDER BY Procedure_reasonReference) AS Reason_id, \n    Procedure_reasonReference as Procedure_Reason\nFROM\n    (SELECT DISTINCT Procedure_reasonReference\n    FROM [fhir].[Procedure_reasonReference_hash] ) a\n\n/*\n**DimPatient**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Patient\nGO\nCREATE VIEW fhir.v_pbi_Patient\nAS\nSELECT\n    Patient_id,\n    birthDate BirthDate,\n    deceasedDatetime DeceasedDate,\n    gender Gender,\n    MaritalStatus_text AS [Marital Status],\n    Datediff(yy,birthDate,getdate()) age, \n\t((((Datediff(yy,birthDate,getdate())) / 10)+1) * 10)-1 AS [AgeBinUpperbound],\n    ((((Datediff(yy,birthDate,getdate())) / 10)) * 10) as   [AgeBinlowerBound],\n    CASE \n        WHEN Datediff(yy,birthDate,getdate()) >=0 AND Datediff(yy,birthDate,getdate()) <= 10 THEN 10\n        WHEN Datediff(yy,birthDate,getdate()) >10 AND Datediff(yy,birthDate,getdate()) <= 20 THEN 20\n        WHEN Datediff(yy,birthDate,getdate()) >20 AND Datediff(yy,birthDate,getdate()) <= 30 THEN 30\n        WHEN Datediff(yy,birthDate,getdate()) >30 AND Datediff(yy,birthDate,getdate()) <= 40 THEN 40\n        WHEN Datediff(yy,birthDate,getdate()) >40 AND Datediff(yy,birthDate,getdate()) <= 50 THEN 50\n        WHEN Datediff(yy,birthDate,getdate()) >50 AND Datediff(yy,birthDate,getdate()) <= 60 THEN 60\n        WHEN Datediff(yy,birthDate,getdate()) >60 AND Datediff(yy,birthDate,getdate()) <= 70 THEN 70\n        WHEN Datediff(yy,birthDate,getdate()) >70 AND Datediff(yy,birthDate,getdate()) <= 80 THEN 80\n        WHEN Datediff(yy,birthDate,getdate()) >80 AND Datediff(yy,birthDate,getdate()) <= 90 THEN 90\n        WHEN Datediff(yy,birthDate,getdate()) >90 AND Datediff(yy,birthDate,getdate()) <= 100 THEN 100\n        WHEN Datediff(yy,birthDate,getdate()) >100 THEN 110\n    ELSE 0 END AS [Age Bin]\nFROM fhir.Patient_main_hash\n\n/*\n**Date**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_Date\nGO\nCREATE VIEW fhir.v_pbi_Date\nAS\nSELECT [Date]\n      ,[Year]\n      ,[MonthNum]\n      ,[Month]\n  FROM [fhir].[dim_date]\n\n/* Old Date View definition transformed into a table dim_Date\n\nSELECT CAST(d AS DATE) [Date],\n\t\tyear(d) [Year],\n\t\tmonth(d) [MonthNum],\n\t\tformat(d, 'MMMM') [Month]\nFROM\n(\n  SELECT d = DATEADD(DAY, rn - 1, '1/1/2007')\n  FROM \n  (\n    SELECT TOP (DATEDIFF(DAY, '1/1/2007', '12/31/2025')) \n      rn = ROW_NUMBER() OVER (ORDER BY s1.[object_id])\n    FROM sys.all_objects AS s1\n    CROSS JOIN sys.all_objects AS s2\n    -- on my system this would support > 5 million days\n    ORDER BY s1.[object_id]\n  ) AS x\n) AS y;\n*/\n\n/*\n**EncounterReason**\n*/\n\nSELECT DISTINCT\n   em.Encounter_ID,\n    em.period_start,\n    em.period_end,\n    em.serviceProvider_display,\n    em.subject_patient_id_reference,\n    ec.reason_display\nFROM [fhir].[Encounter_main_hash] em\nINNER JOIN [fhir].[Encounter_reasonCode_hash] ec\n    ON em.Encounter_ID = ec.Encounter_ID\n\n/*\n**DimInsuranceCoverage**\n*/\n\nDROP VIEW fhir.v_pbi_Insurance_Coverage\nGO\n CREATE VIEW fhir.v_pbi_Insurance_Coverage\n AS\n SELECT DISTINCT [insurance_coverage_display]\n    FROM [fhir].[Claim_insurance_hash]\n\n/*\n**Claim Aggreggated by Provide, Year, and HasInsurance**\n*/\n\nDROP VIEW IF EXISTS fhir.v_pbi_agg_ClaimInsurance_Provider_Date_Insurance\nGO\nCREATE VIEW fhir.v_pbi_agg_ClaimInsurance_Provider_Date_Insurance\nAS\nSELECT  \n    provider_org_id_reference,\n    year([Claim Date]) [Claim Year],\n    HasInsurance,\n    COUNT(*) Count_Claims,\n    SUM(total_value) Sum_TotalValue\nFROM fhir.v_pbi_ClaimInsurance\nGROUP BY    \n    provider_org_id_reference,\n    year([Claim Date]),\n    HasInsurance\n\n/*\n**Claim Daily Summary by Provider, Date, HasInsurance, InsurnaceCoverage**\n*/\n\nDROP View fhir.v_pbi_ClaimDailySummaryProvider\nGO\nCREATE Materialized View fhir.v_pbi_ClaimDailySummaryProvider\nWITH ( DISTRIBUTION  = HASH(provider_org_id_reference) )\nAS\nSELECT \n    cm.provider_org_id_reference,\n    dd.[date] AS [Claim Date],\n    dd.[Year] AS [Claim Year],\n    dd.[MonthNum],\n    dd.[Month],\n    ci.HasInsurance_coverage AS HasInsurance,\n    ci.insurance_coverage_display,\n    COUNT_Big(total_value) Count_Claims,\n    SUM(total_value) Sum_TotalValue\n  FROM [fhir].[Claim_main_hash] cm\n  INNER JOIN [fhir].[Claim_insurance_hash] ci\n    ON cm.Claim_id = ci.Claim_id\n  INNER JOIN fhir.dim_date dd\n    ON cm.billablePeriod_start_date = dd.[date]\nGROUP BY    \n    provider_org_id_reference,\n    dd.[date] ,\n    dd.[Year] ,\n    dd.[MonthNum],\n    dd.[Month],\n    ci.HasInsurance_coverage,\n\tinsurance_coverage_display;\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "healthcare",
				"poolName": "healthcare"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}